# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import ml_pb2 as ml__pb2


class MlServiceStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Digest = channel.unary_unary(
        '/api.v1.MlService/Digest',
        request_serializer=ml__pb2.DigestRequest.SerializeToString,
        response_deserializer=ml__pb2.DigestResponse.FromString,
        )
    self.Trend = channel.unary_unary(
        '/api.v1.MlService/Trend',
        request_serializer=ml__pb2.TrendRequest.SerializeToString,
        response_deserializer=ml__pb2.TrendResponse.FromString,
        )


class MlServiceServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def Digest(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Trend(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_MlServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Digest': grpc.unary_unary_rpc_method_handler(
          servicer.Digest,
          request_deserializer=ml__pb2.DigestRequest.FromString,
          response_serializer=ml__pb2.DigestResponse.SerializeToString,
      ),
      'Trend': grpc.unary_unary_rpc_method_handler(
          servicer.Trend,
          request_deserializer=ml__pb2.TrendRequest.FromString,
          response_serializer=ml__pb2.TrendResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'api.v1.MlService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
